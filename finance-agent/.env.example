# ============================================
# Configuration Finance Agent (FinanceBot)
# ============================================
# Copiez ce fichier en .env et remplissez vos clés API
# cp .env.example .env

# ============================================
# CLÉS API LLM (AU MOINS UNE REQUISE)
# ============================================

# Option 1 : OpenAI (RECOMMANDÉ - meilleures performances)
# Obtenez votre clé sur : https://platform.openai.com/api-keys
OPENAI_API_KEY=sk-proj-VOTRE-CLE-ICI

# Option 2 : Anthropic Claude
# Obtenez votre clé sur : https://console.anthropic.com/
# ANTHROPIC_API_KEY=sk-ant-VOTRE-CLE-ICI

# Option 3 : OpenRouter
# Obtenez votre clé sur : https://openrouter.ai/
# OPENROUTER_API_KEY=VOTRE-CLE-ICI

# Option 4 : Google Generative AI
# Obtenez votre clé sur : https://ai.google.dev/
# GOOGLE_GENERATIVE_AI_API_KEY=VOTRE-CLE-ICI

# Option 5 : Ollama (pour usage local, gratuit)
# Installation : https://ollama.ai/
# OLLAMA_API_ENDPOINT=http://localhost:11434

# ============================================
# Configuration du Serveur
# ============================================

# Port du serveur (3001 pour finance-agent)
PORT=3001

# Environnement (development ou production)
NODE_ENV=development

# ============================================
# Configuration ElizaOS
# ============================================

ELIZA_SERVER_PORT=3001
ELIZA_SERVER_HOST=localhost
ELIZA_SERVER_WEBSOCKET_ENABLED=true

# ============================================
# Configuration Portfolio Crypto
# ============================================

# Adresse Ethereum à surveiller (REQUISE pour surveillance)
EVM_PUBLIC_KEY=0xVotreAdresseEthereum

# Chaînes EVM à surveiller (séparées par des virgules)
# Options disponibles : ethereum, base, polygon, arbitrum, optimism, bsc, avalanche, fantom, cronos
#
# Exemples d'utilisation :
#   - Une seule chaîne : EVM_CHAINS=ethereum
#   - Plusieurs chaînes : EVM_CHAINS=ethereum,base,polygon
#   - Toutes les chaînes : EVM_CHAINS=all
#
# Par défaut : ethereum (mode single-chain)
EVM_CHAINS=ethereum
#
# Note : Le mode multi-chain scanne plusieurs réseaux en parallèle
# Recommandé avec une clé Alchemy pour de meilleures performances

# API Etherscan (pour récupérer le solde ETH et données de base)
# Obtenez une clé gratuite sur : https://etherscan.io/apis
ETHERSCAN_API_KEY=VOTRE-CLE-ETHERSCAN

# API Alchemy (RECOMMANDÉ pour lister tous les tokens ERC-20 gratuitement)
# Obtenez une clé gratuite sur : https://www.alchemy.com/
# Plan gratuit : 300M Compute Units/mois (largement suffisant)
# Si non configuré, utilisera la clé 'demo' (limitée)
ALCHEMY_API_KEY=VOTRE-CLE-ALCHEMY

# Note : Etherscan PRO (payant ~$149/mois) n'est PAS nécessaire
# Alchemy fournit gratuitement toutes les fonctionnalités de portfolio

# ============================================
# Configuration Base de Données (optionnel)
# ============================================

# Si vous utilisez PostgreSQL (sinon SQLite sera utilisé en développement)
# DATABASE_URL=postgresql://user:password@localhost:5432/eliza_finance

# ============================================
# Configuration Plugins
# ============================================

# Désactiver Bootstrap (non recommandé sauf cas spécifique)
# IGNORE_BOOTSTRAP=false

# ============================================
# Plugins Optionnels - Plateformes Sociales
# ============================================

# Discord (si vous souhaitez connecter Discord)
# Créez un bot sur : https://discord.com/developers/applications
# DISCORD_API_TOKEN=VOTRE-TOKEN-DISCORD

# Telegram (si vous souhaitez connecter Telegram)
# Créez un bot avec @BotFather sur Telegram
# TELEGRAM_BOT_TOKEN=VOTRE-TOKEN-TELEGRAM

# Twitter/X (si vous souhaitez connecter Twitter)
# Créez une app sur : https://developer.twitter.com/
# TWITTER_API_KEY=VOTRE-CLE-TWITTER
# TWITTER_API_SECRET_KEY=VOTRE-SECRET-TWITTER
# TWITTER_ACCESS_TOKEN=VOTRE-TOKEN-ACCESS
# TWITTER_ACCESS_TOKEN_SECRET=VOTRE-TOKEN-SECRET

# ============================================
# Configuration Logging (optionnel)
# ============================================

# LOG_LEVEL=info
# LOG_LEVEL=debug
# LOG_LEVEL=error

# ============================================
# Notes Importantes
# ============================================
# - Ne commitez JAMAIS le fichier .env dans Git
# - Au moins une clé API (OpenAI, Anthropic, ou Ollama) est requise
# - Le plugin Bootstrap est chargé automatiquement sauf si IGNORE_BOOTSTRAP=true
# - Le port 3001 est recommandé pour éviter les conflits avec d'autres agents
# - En développement, SQLite sera utilisé si DATABASE_URL n'est pas défini